version: 2.1
parameters:
  url:
    type: string
    default: "latest"
  file_count:
    type: integer
    default: 21
  first_column_name:
    type: string
    default: "Unused"

jobs:
  extract-csv:
    docker:
      - image: geographica/gdal2:2.4.0
    steps:
      - checkout
      - run:
          name: create work directory
          command: |
            mkdir -p /tmp/workspace/target
      - run:
          name: install base software
          command: |
            apt-get update && apt-get install -y vim dbview unzip wget less
      - run:
          name: get remote file
          command: wget <<pipeline.parameters.url>> -O /tmp/workspace/data.zip
      - run:
          name: transform fileGDB to csv
          command: |
            $PWD/scripts/geodb2csv.sh data  <<pipeline.parameters.first_column_name>>
      - run:
          name: Test correct number of files
          command: |
            ls -al /tmp/workspace/target
            test `ls /tmp/workspace/target | wc -l` -eq <<pipeline.parameters.file_count>>
      - store_artifacts:
          path: /tmp/workspace/target
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - target/
  transform2RDF:
    docker:
      - image: bertvannuffelen/any2jsonld:bedrijventerreinen.2
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name:
          command: |
            mkdir -p /tmp/workspace/output
            touch /tmp/workspace/convertlog.log
      - run:
          name: convert all csv files
          command: |
            cp $PWD/scripts/Makefile /tmp/workspace
            pushd /tmp/workspace
            make rdf
      - run:
          name: Test conversion result
          command: |
             cat /tmp/workspace/convert.log
             wc -l /tmp/workspace/convert.log
             test `cat /tmp/workspace/convert.log | wc -l` -eq 64
      - run:
          name: List the files which have been created
          command: ls -al /tmp/workspace/*
      - store_artifacts:
          path: /tmp/workspace/output
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - output/
  upload:
    docker:
      - image: circleci/python
    working_directory: /tmp/workspace/output
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: bash scripts/azure.sh ${SAS_TOKEN}
workflows:
  version: 2
  generate_documentation:
    jobs:
      - extract-csv
      - transform2RDF:
          requires:
            - extract-csv
      - hold:
          type: approval # presents manual approval button in the UI
          requires:
            - transform2RDF
      - upload:
          requires:
            - hold
